@model FRM.Core.DTOs.ChangePasswordDto

@{
    ViewBag.Title = "Смена пароля";
}

<h2>@ViewBag.Title</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Форма смены пароля</h4>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, "Текущий пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* Используем PasswordFor, чтобы скрыть вводимые символы *@
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, "Новый пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, "Подтвердите пароль", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmNewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сменить пароль" class="btn btn-primary" />
                @Html.ActionLink("Отмена", "Index", "Profile", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}